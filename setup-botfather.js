const https = require('https');

const BOT_TOKEN = '8465643840:AAEWFjl1h-EY3150NgihSG2HAaVYLci14Rk';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Telegram API
function makeRequest(method, data = null) {
    return new Promise((resolve, reject) => {
        const postData = data ? JSON.stringify(data) : '';
        
        const options = {
            hostname: 'api.telegram.org',
            port: 443,
            path: `/bot${BOT_TOKEN}/${method}`,
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Content-Length': Buffer.byteLength(postData)
            }
        };

        const req = https.request(options, (res) => {
            let responseData = '';
            
            res.on('data', (chunk) => {
                responseData += chunk;
            });
            
            res.on('end', () => {
                try {
                    const result = JSON.parse(responseData);
                    if (result.ok) {
                        resolve(result.result);
                    } else {
                        reject(new Error(`Telegram API error: ${result.description}`));
                    }
                } catch (error) {
                    reject(new Error(`Failed to parse response: ${error.message}`));
                }
            });
        });

        req.on('error', (error) => {
            reject(error);
        });

        if (postData) {
            req.write(postData);
        }
        
        req.end();
    });
}

// –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
async function setupBot() {
    try {
        console.log('üöÄ –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ Helpdesk Park...\n');
        
        // 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
        console.log('üìã –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã...');
        const commandsResult = await makeRequest('setMyCommands', {
            commands: [
                {
                    command: 'start',
                    description: 'üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å Helpdesk Park'
                },
                {
                    command: 'app',
                    description: 'üì± –û—Ç–∫—Ä—ã—Ç—å Mini App'
                },
                {
                    command: 'help',
                    description: '‚ùì –ü–æ–º–æ—â—å'
                }
            ]
        });
        console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
        
        // 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
        console.log('\nüìù –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞...');
        const descriptionResult = await makeRequest('setMyDescription', {
            description: 'üöÄ Helpdesk Park - —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏ –¥–ª—è –ø–∞—Ä–∫–∞ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤. –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∑–∞—è–≤–∫–∏, –Ω–∞–∑–Ω–∞—á–∞–π—Ç–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å.'
        });
        console.log('‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
        
        // 3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        console.log('\nüí¨ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ...');
        const shortDescriptionResult = await makeRequest('setMyShortDescription', {
            short_description: 'üöÄ Helpdesk Park - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏'
        });
        console.log('‚úÖ –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
        
        // 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
        console.log('\nüçî –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é...');
        const menuResult = await makeRequest('setChatMenuButton', {
            menu_button: {
                type: 'web_app',
                text: 'üöÄ Helpdesk Park',
                web_app: {
                    url: 'https://KuzinVA.github.io/helpdesk-park-app/'
                }
            }
        });
        console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
        
        // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...');
        const botInfo = await makeRequest('getMe');
        console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:', botInfo);
        
        const menuButton = await makeRequest('getChatMenuButton');
        console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ–Ω—é:', menuButton);
        
        console.log('\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
        console.log('\nüì± –¢–µ–ø–µ—Ä—å –±–æ—Ç –¥–æ–ª–∂–µ–Ω:');
        console.log('1. –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start');
        console.log('2. –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É –º–µ–Ω—é —Å Mini App');
        console.log('3. –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å Mini App');
        
        console.log('\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –ï—Å–ª–∏ has_main_web_app –≤—Å–µ –µ—â–µ false,');
        console.log('–Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather –≤—Ä—É—á–Ω—É—é:');
        console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ @BotFather –≤ Telegram');
        console.log('2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /mybots');
        console.log('3. –í—ã–±–µ—Ä–∏—Ç–µ @helpdeskParkApp_bot');
        console.log('4. Bot Settings > Menu Button');
        console.log('5. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ URL: https://KuzinVA.github.io/helpdesk-park-app/');
        
        console.log('\nüîó –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
        console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ @helpdeskParkApp_bot');
        console.log('2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start');
        console.log('3. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é');
        
    } catch (error) {
        console.error('\nüí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
setupBot();

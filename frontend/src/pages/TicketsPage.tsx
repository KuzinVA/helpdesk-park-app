import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { TicketCard } from '@/components/TicketCard';
import { QuickTicketForm } from '@/components/QuickTicketForm';
import { useTicketStore } from '@/stores/ticketStore';
import { Ticket } from '@/types/ticket';

export const TicketsPage: React.FC = () => {
  const { tickets, fetchTickets, loading, error } = useTicketStore();
  const [filteredTickets, setFilteredTickets] = useState<Ticket[]>([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [statusFilter, setStatusFilter] = useState<string>('all');
  const [priorityFilter, setPriorityFilter] = useState<string>('all');
  const [showQuickForm, setShowQuickForm] = useState(false);

  useEffect(() => {
    fetchTickets();
  }, [fetchTickets]);

  useEffect(() => {
    let filtered = tickets;

    // –§–∏–ª—å—Ç—Ä –ø–æ –ø–æ–∏—Å–∫—É
    if (searchTerm) {
      filtered = filtered.filter(ticket =>
        ticket.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
        ticket.description?.toLowerCase().includes(searchTerm.toLowerCase())
      );
    }

    // –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É
    if (statusFilter !== 'all') {
      filtered = filtered.filter(ticket => ticket.status === statusFilter);
    }

    // –§–∏–ª—å—Ç—Ä –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
    if (priorityFilter !== 'all') {
      filtered = filtered.filter(ticket => ticket.priority === priorityFilter);
    }

    setFilteredTickets(filtered);
  }, [tickets, searchTerm, statusFilter, priorityFilter]);

  const statusOptions = [
    { value: 'all', label: '–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã', icon: 'üìã' },
    { value: 'new', label: '–ù–æ–≤—ã–µ', icon: 'üÜï' },
    { value: 'assigned', label: '–ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ', icon: 'üë§' },
    { value: 'in_progress', label: '–í —Ä–∞–±–æ—Ç–µ', icon: '‚ö°' },
    { value: 'on_hold', label: '–ù–∞ –ø–∞—É–∑–µ', icon: '‚è∏Ô∏è' },
    { value: 'resolved', label: '–†–µ—à–µ–Ω–Ω—ã–µ', icon: '‚úÖ' },
    { value: 'closed', label: '–ó–∞–∫—Ä—ã—Ç—ã–µ', icon: 'üîí' },
  ];

  const priorityOptions = [
    { value: 'all', label: '–í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã', icon: 'üéØ' },
    { value: 'low', label: '–ù–∏–∑–∫–∏–µ', icon: 'üü¢' },
    { value: 'medium', label: '–°—Ä–µ–¥–Ω–∏–µ', icon: 'üü°' },
    { value: 'high', label: '–í—ã—Å–æ–∫–∏–µ', icon: 'üü†' },
    { value: 'critical', label: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ', icon: 'üî¥' },
  ];

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center apple-container">
        <div className="apple-card p-8 text-center">
          <div className="animate-spin rounded-full h-12 w-12 mx-auto mb-4" 
               style={{ 
                 borderTop: `2px solid var(--system-blue)`,
                 borderRight: '2px solid transparent',
                 borderBottom: '2px solid transparent',
                 borderLeft: '2px solid transparent'
               }}></div>
          <p className="apple-text-body" style={{ color: 'var(--label-secondary)' }}>
            –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞—è–≤–∫–∏...
          </p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen flex items-center justify-center apple-container">
        <div className="apple-card p-8 text-center">
          <div className="text-4xl mb-4">‚ö†Ô∏è</div>
          <h2 className="apple-text-large-title mb-2" style={{ color: 'var(--label-primary)' }}>
            –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
          </h2>
          <p className="apple-text-body mb-4" style={{ color: 'var(--label-secondary)' }}>
            {error}
          </p>
          <button
            onClick={fetchTickets}
            className="apple-button-primary"
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="apple-container space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
      <div className="text-center space-y-3">
        <h1 className="apple-text-title" style={{ color: 'var(--label-primary)' }}>
          –ó–∞—è–≤–∫–∏
        </h1>
        <p className="apple-text-body" style={{ color: 'var(--label-secondary)' }}>
          –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–æ–∫ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–¥–∞—á–∞–º–∏ –ø–∞—Ä–∫–∞
        </p>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
        <div className="apple-card p-4 text-center">
          <div className="text-2xl font-bold mb-1" style={{ color: 'var(--system-blue)' }}>
            {tickets.length}
          </div>
          <div className="apple-text-caption" style={{ color: 'var(--label-secondary)' }}>
            –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫
          </div>
        </div>
        <div className="apple-card p-4 text-center">
          <div className="text-2xl font-bold mb-1" style={{ color: 'var(--system-green)' }}>
            {tickets.filter(t => t.status === 'new').length}
          </div>
          <div className="apple-text-caption" style={{ color: 'var(--label-secondary)' }}>
            –ù–æ–≤—ã—Ö
          </div>
        </div>
        <div className="apple-card p-4 text-center">
          <div className="text-2xl font-bold mb-1" style={{ color: 'var(--system-orange)' }}>
            {tickets.filter(t => t.status === 'in_progress').length}
          </div>
          <div className="apple-text-caption" style={{ color: 'var(--label-secondary)' }}>
            –í —Ä–∞–±–æ—Ç–µ
          </div>
        </div>
        <div className="apple-card p-4 text-center">
          <div className="text-2xl font-bold mb-1" style={{ color: 'var(--system-purple)' }}>
            {tickets.filter(t => t.status === 'resolved').length}
          </div>
          <div className="apple-text-caption" style={{ color: 'var(--label-secondary)' }}>
            –†–µ—à–µ–Ω–Ω—ã—Ö
          </div>
        </div>
      </div>

      {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
      <div className="glass-card p-6 space-y-4">
        {/* –ü–æ–∏—Å–∫ */}
        <div className="relative">
          <input
            type="text"
            placeholder="üîç –ü–æ–∏—Å–∫ –ø–æ –∑–∞—è–≤–∫–∞–º..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="w-full px-4 py-3 pl-12 bg-white/50 dark:bg-gray-800/50 border border-gray-200 dark:border-gray-700 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
          />
          <span className="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400">üîç</span>
        </div>

        {/* –§–∏–ª—å—Ç—Ä—ã */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {/* –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É */}
          <div>
            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              –°—Ç–∞—Ç—É—Å
            </label>
            <select
              value={statusFilter}
              onChange={(e) => setStatusFilter(e.target.value)}
              className="w-full px-4 py-3 bg-white/50 dark:bg-gray-800/50 border border-gray-200 dark:border-gray-700 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
            >
              {statusOptions.map(option => (
                <option key={option.value} value={option.value}>
                  {option.icon} {option.label}
                </option>
              ))}
            </select>
          </div>

          {/* –§–∏–ª—å—Ç—Ä –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É */}
          <div>
            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç
            </label>
            <select
              value={priorityFilter}
              onChange={(e) => setPriorityFilter(e.target.value)}
              className="w-full px-4 py-3 bg-white/50 dark:bg-gray-800/50 border border-gray-200 dark:border-gray-700 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
            >
              {priorityOptions.map(option => (
                <option key={option.value} value={option.value}>
                  {option.icon} {option.label}
                </option>
              ))}
            </select>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è */}
        <div className="flex gap-3 justify-center">
          <button
            onClick={() => setShowQuickForm(true)}
            className="apple-button-primary flex items-center space-x-2"
          >
            <span>‚ö°</span>
            <span>–ë—ã—Å—Ç—Ä–∞—è –∑–∞—è–≤–∫–∞</span>
          </button>
          
          <Link
            to="/create"
            className="apple-button-secondary flex items-center space-x-2"
          >
            <span>üìù</span>
            <span>–ü–æ–¥—Ä–æ–±–Ω–∞—è —Ñ–æ—Ä–º–∞</span>
          </Link>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ */}
      <div className="space-y-4">
        <div className="flex items-center justify-between">
          <h2 className="text-xl font-semibold text-gray-900 dark:text-white">
            –ó–∞—è–≤–∫–∏ ({filteredTickets.length})
          </h2>
          {filteredTickets.length === 0 && tickets.length > 0 && (
            <p className="text-sm text-gray-500 dark:text-gray-400">
              –ù–µ—Ç –∑–∞—è–≤–æ–∫ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º
            </p>
          )}
        </div>

        {filteredTickets.length === 0 ? (
          <div className="glass-card p-12 text-center">
            <div className="text-6xl mb-4">üì≠</div>
            <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">
              {tickets.length === 0 ? '–ó–∞—è–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç' : '–ó–∞—è–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'}
            </h3>
            <p className="text-gray-600 dark:text-gray-300 mb-6">
              {tickets.length === 0 
                ? '–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∑–∞—è–≤–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã'
                : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã'
              }
            </p>
            {tickets.length === 0 && (
              <Link to="/create" className="gradient-button">
                –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é –∑–∞—è–≤–∫—É
              </Link>
            )}
          </div>
        ) : (
          <div className="grid gap-4">
            {filteredTickets.map((ticket) => (
              <TicketCard key={ticket.id} ticket={ticket} />
            ))}
          </div>
        )}
      </div>

      {/* –ë—ã—Å—Ç—Ä–∞—è —Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ */}
      {showQuickForm && (
        <QuickTicketForm
          onClose={() => setShowQuickForm(false)}
          onSuccess={() => {
            setShowQuickForm(false);
            fetchTickets(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫
          }}
        />
      )}
    </div>
  );
};

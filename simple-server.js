const http = require('http');
const fs = require('fs');
const path = require('path');
const url = require('url');

const PORT = process.env.PORT || 3000;

// MIME —Ç–∏–ø—ã –¥–ª—è —Ñ–∞–π–ª–æ–≤
const mimeTypes = {
    '.html': 'text/html',
    '.js': 'text/javascript',
    '.css': 'text/css',
    '.json': 'application/json',
    '.png': 'image/png',
    '.jpg': 'image/jpeg',
    '.gif': 'image/gif',
    '.svg': 'image/svg+xml',
    '.ico': 'image/x-icon'
};

// –°–æ–∑–¥–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä
const server = http.createServer((req, res) => {
    const parsedUrl = url.parse(req.url);
    let pathname = parsedUrl.pathname;
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π –ø—É—Ç—å
    if (pathname === '/') {
        pathname = '/simple-test.html';
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    const ext = path.extname(pathname);
    const mimeType = mimeTypes[ext] || 'text/plain';
    
    // –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
    let filePath;
    if (pathname.startsWith('/frontend/')) {
        filePath = path.join(__dirname, pathname);
    } else {
        filePath = path.join(__dirname, 'frontend', pathname);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    fs.access(filePath, fs.constants.F_OK, (err) => {
        if (err) {
            // –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
            res.writeHead(404, { 'Content-Type': 'text/html' });
            res.end(`
                <!DOCTYPE html>
                <html>
                <head>
                    <title>404 - –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω</title>
                    <meta charset="utf-8">
                    <style>
                        body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
                        .error { color: #e74c3c; font-size: 72px; margin-bottom: 20px; }
                        .message { color: #2c3e50; font-size: 18px; margin-bottom: 30px; }
                        .link { color: #3498db; text-decoration: none; }
                        .link:hover { text-decoration: underline; }
                    </style>
                </head>
                <body>
                    <div class="error">404</div>
                    <div class="message">–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω</div>
                    <a href="/" class="link">–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
                </body>
                </html>
            `);
            return;
        }
        
        // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        fs.readFile(filePath, (err, data) => {
            if (err) {
                res.writeHead(500, { 'Content-Type': 'text/html' });
                res.end('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
                return;
            }
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            res.writeHead(200, { 
                'Content-Type': mimeType,
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',
                'Access-Control-Allow-Headers': 'Content-Type'
            });
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
            res.end(data);
        });
    });
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
server.listen(PORT, () => {
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üì± –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:${PORT}`);
    console.log(`üåê –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω–µ—à–Ω–∏–π URL –¥–ª—è Telegram –±–æ—Ç–∞`);
    console.log(`\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã:`);
    console.log(`   ‚Ä¢ / - –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (simple-test.html)`);
    console.log(`   ‚Ä¢ /telegram-test.html - –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ`);
    console.log(`   ‚Ä¢ /index.html - –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ —Å–æ–±—Ä–∞–Ω–æ)`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
server.on('error', (err) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err);
});

// Graceful shutdown
process.on('SIGINT', () => {
    console.log('\nüõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä...');
    server.close(() => {
        console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        process.exit(0);
    });
});

process.on('SIGTERM', () => {
    console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä...');
    server.close(() => {
        console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        process.exit(0);
    });
});

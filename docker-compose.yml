version: '3.8'

services:
  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:3000
    networks:
      - helpdesk-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - minio
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://helpdesk:helpdesk123@postgres:5432/helpdesk
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - JWT_SECRET=your-super-secret-jwt-key-here
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_BOT_USERNAME=${TELEGRAM_BOT_USERNAME}
    networks:
      - helpdesk-network

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=helpdesk
      - POSTGRES_USER=helpdesk
      - POSTGRES_PASSWORD=helpdesk123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - helpdesk-network

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - helpdesk-network

  # MinIO
  minio:
    image: minio/minio:latest
    ports:
      - "9001:9000"
      - "9002:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - helpdesk-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  helpdesk-network:
    driver: bridge
